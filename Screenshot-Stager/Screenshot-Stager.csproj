<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <RootNamespace>Screenshot_Stager</RootNamespace>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UseWPF>true</UseWPF>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <ApplicationIcon>StagerIcon.ico</ApplicationIcon>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win-arm64;win-x86;win-x64</RuntimeIdentifiers>
    <SupportedOSPlatformVersion>10.0.19041.0</SupportedOSPlatformVersion>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <WindowsSdkPackageVersion>10.0.19041.47</WindowsSdkPackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="TreeBackground.jpg" />
  </ItemGroup>

  <ItemGroup>
    <Resource Include="StagerIcon.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
    <PackageReference Include="GlobalHotKeys.Windows" Version="0.1.0" />
    
      <AdditionalFiles Include="NativeMethods.txt" />
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.106">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="PixiEditor.ColorPicker" Version="3.4.1" />
    <PackageReference Include="System.Drawing.Common" Version="9.0.0" />
    <PackageReference Include="WPF-UI" Version="3.0.5" />
  </ItemGroup>

  <ItemGroup>
    <Resource Include="TreeBackground.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Resource>
  </ItemGroup>

    <ItemGroup>
        <None Remove="NativeMethods.json" />
        <None Remove="NativeMethods.txt" />
        <AdditionalFiles Include="NativeMethods.json" Condition="Exists('NativeMethods.json')" />
        <AdditionalFiles Include="NativeMethods.txt" Condition="Exists('NativeMethods.txt')" />
    </ItemGroup>

    <ItemGroup>
        <!-- Provide the path to the winmds used as input into the analyzer. -->
        <CompilerVisibleProperty Include="CsWin32InputMetadataPaths" />
        <CompilerVisibleProperty Include="CsWin32InputDocPaths" />
    </ItemGroup>

    <Target Name="AssembleCsWin32InputPaths" BeforeTargets="GenerateMSBuildEditorConfigFileCore">
        <!-- Roslyn only allows source generators to see msbuild properties, to lift msbuild items into semicolon-delimited properties. -->
        <PropertyGroup>
            <CsWin32InputMetadataPaths>@(ProjectionMetadataWinmd->'%(FullPath)','|')</CsWin32InputMetadataPaths>
            <CsWin32InputDocPaths>@(ProjectionDocs->'%(FullPath)','|')</CsWin32InputDocPaths>
        </PropertyGroup>
    </Target>


    <Target Name="FixMds" BeforeTargets="CoreCompile" Condition="'@(ProjectionMetadataWinmd)'==''">
        <Message Importance="high" Text="Adding missing winmd" />
        <ItemGroup>
            <ProjectionMetadataWinmd Include="C:\.tools\.nuget\packages\microsoft.windows.sdk.win32metadata\55.0.45-preview\Windows.Win32.winmd" />
        </ItemGroup>
    </Target>

</Project>
